# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto import numbers_pb2 as proto_dot_numbers__pb2


class GrpcTestServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GrpcTestFunction = channel.unary_unary(
                '/GrpcTestService/GrpcTestFunction',
                request_serializer=proto_dot_numbers__pb2.UnaryDataRequest.SerializeToString,
                response_deserializer=proto_dot_numbers__pb2.ResponseString.FromString,
                )
        self.UnaryToStreamFunction = channel.unary_stream(
                '/GrpcTestService/UnaryToStreamFunction',
                request_serializer=proto_dot_numbers__pb2.UnaryToStreamDataRequest.SerializeToString,
                response_deserializer=proto_dot_numbers__pb2.EncodedUnaryToStreamResponse.FromString,
                )
        self.StreamToUnaryFunction = channel.stream_unary(
                '/GrpcTestService/StreamToUnaryFunction',
                request_serializer=proto_dot_numbers__pb2.UnaryDataRequest.SerializeToString,
                response_deserializer=proto_dot_numbers__pb2.UnaryReply.FromString,
                )
        self.StreamToStreamFunction = channel.stream_stream(
                '/GrpcTestService/StreamToStreamFunction',
                request_serializer=proto_dot_numbers__pb2.UnaryDataRequest.SerializeToString,
                response_deserializer=proto_dot_numbers__pb2.ResponseString.FromString,
                )


class GrpcTestServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GrpcTestFunction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnaryToStreamFunction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamToUnaryFunction(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamToStreamFunction(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GrpcTestServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GrpcTestFunction': grpc.unary_unary_rpc_method_handler(
                    servicer.GrpcTestFunction,
                    request_deserializer=proto_dot_numbers__pb2.UnaryDataRequest.FromString,
                    response_serializer=proto_dot_numbers__pb2.ResponseString.SerializeToString,
            ),
            'UnaryToStreamFunction': grpc.unary_stream_rpc_method_handler(
                    servicer.UnaryToStreamFunction,
                    request_deserializer=proto_dot_numbers__pb2.UnaryToStreamDataRequest.FromString,
                    response_serializer=proto_dot_numbers__pb2.EncodedUnaryToStreamResponse.SerializeToString,
            ),
            'StreamToUnaryFunction': grpc.stream_unary_rpc_method_handler(
                    servicer.StreamToUnaryFunction,
                    request_deserializer=proto_dot_numbers__pb2.UnaryDataRequest.FromString,
                    response_serializer=proto_dot_numbers__pb2.UnaryReply.SerializeToString,
            ),
            'StreamToStreamFunction': grpc.stream_stream_rpc_method_handler(
                    servicer.StreamToStreamFunction,
                    request_deserializer=proto_dot_numbers__pb2.UnaryDataRequest.FromString,
                    response_serializer=proto_dot_numbers__pb2.ResponseString.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'GrpcTestService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class GrpcTestService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GrpcTestFunction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GrpcTestService/GrpcTestFunction',
            proto_dot_numbers__pb2.UnaryDataRequest.SerializeToString,
            proto_dot_numbers__pb2.ResponseString.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnaryToStreamFunction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/GrpcTestService/UnaryToStreamFunction',
            proto_dot_numbers__pb2.UnaryToStreamDataRequest.SerializeToString,
            proto_dot_numbers__pb2.EncodedUnaryToStreamResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StreamToUnaryFunction(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/GrpcTestService/StreamToUnaryFunction',
            proto_dot_numbers__pb2.UnaryDataRequest.SerializeToString,
            proto_dot_numbers__pb2.UnaryReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StreamToStreamFunction(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/GrpcTestService/StreamToStreamFunction',
            proto_dot_numbers__pb2.UnaryDataRequest.SerializeToString,
            proto_dot_numbers__pb2.ResponseString.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
